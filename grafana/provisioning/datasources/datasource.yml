# config file version
apiVersion: 1

# list of datasources that should be deleted from the database
deleteDatasources:
  - name: Prometheus
    orgId: 1

datasources:
  - name: Prometheus
    uid: prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090

  - name: Loki
    uid: loki
    type: loki
    access: proxy
    url: http://loki:3100
    jsonData:
      maxLines: 1000
      derivedFields:
        # Field with internal link pointing to data source in Grafana.
        # datasourceUid value can be anything, but it should be unique across all defined data source uids.
        - datasourceUid: tempo
          matcherRegex: '"[tT]race_?[iI][dD]"?[:=]"?(\w+)"'
          name: TraceId
          # url will be interpreted as query for the datasource
          url: '$${__value.raw}'
          # optional for URL Label to set a custom display label for the link.
          urlDisplayLabel: 'View Trace'
        - datasourceUid: tempo
          matcherRegex: '"[sS]pan_?[iI][dD]"?[:=]"?(\w+)"'
          name: SpanId
          # url will be interpreted as query for the datasource
          url: '$${__value.raw}'
          # optional for URL Label to set a custom display label for the link.
          urlDisplayLabel: 'View Span'
        - matcherRegex: '"@l":"(\w+)"'
          name: label

  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    url: http://tempo:3200
    basicAuth: false
    isDefault: true
    version: 1
    editable: false
    apiVersion: 1
    uid: tempo
    jsonData:
      tracesToLogsV2:
        datasourceUid: loki
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags:
          [
            { key: 'app', value: 'app' },
            { key: 'cluster', value: 'cluster' },
            { key: 'env', value: 'env' },
          ]
        filterByTraceID: true
        filterBySpanID: true
        customQuery: true
        query: '{exporter="vector", $${__tags}} | json | TraceId=`$${__span.traceId}`, SpanId=`$${__span.spanId}`'
    tracesToMetrics:
      datasourceUid: 'prometheus'
      spanStartTimeShift: '1h'
      spanEndTimeShift: '-1h'
      tags: [{ key: 'service.name', value: 'service' }]
      queries:
        - name: 'Sample query'
          query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
    serviceMap:
      datasourceUid: 'prometheus'
    lokiSearch:
      datasourceUid: 'loki'
    traceQuery:
      timeShiftEnabled: true
      spanStartTimeShift: '1h'
      spanEndTimeShift: '-1h'
    spanBar:
      type: 'Tag'
      tag: 'http.path'
